apiVersion: v1
kind: Namespace
metadata:
  name: traffic-generator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traffic-generator
  namespace: traffic-generator
  labels:
    app.kubernetes.io/component: traffic-generator
    app.kubernetes.io/name: traffic-generator
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: traffic-generator
      app.kubernetes.io/name: traffic-generator
  replicas: 20
  template:
    metadata:
      labels:
        app.kubernetes.io/component: traffic-generator
        app.kubernetes.io/name: traffic-generator
    spec:
      nodeName: kind-worker
      containers:
        - name: server
          image: ealen/echo-server
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          ports:
            - containerPort: 80
              protocol: TCP
        - name: client
          image: curlimages/curl
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          command:
            - sh
            - -c
            - |
              while true; do
                  cat /dev/random | head -c 200m | curl "http://traffic-generator-svc.traffic-generator.svc.cluster.local" -d @- > /dev/null
              done
---
kind: Service
apiVersion: v1
metadata:
  name: traffic-generator-svc
  namespace: traffic-generator
spec:
  selector:
    app.kubernetes.io/component: traffic-generator
    app.kubernetes.io/name: traffic-generator
  type: NodePort
  ports:
    - name: traffic-generator
      protocol: TCP
      port: 80
      targetPort: 80
